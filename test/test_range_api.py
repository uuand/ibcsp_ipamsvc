# coding: utf-8

"""
    IP Address Management API

    The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.     # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import ibcsp_ipamsvc
from ibcsp_ipamsvc.api.range_api import RangeApi  # noqa: E501
from ibcsp_ipamsvc.rest import ApiException


class TestRangeApi(unittest.TestCase):
    """RangeApi unit test stubs"""

    def setUp(self):
        self.api = ibcsp_ipamsvc.api.range_api.RangeApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_range_create(self):
        """Test case for range_create

        Create the Range object.  # noqa: E501
        """
        pass

    def test_range_create_next_available_ip(self):
        """Test case for range_create_next_available_ip

        Create a Next Available IP object.  # noqa: E501
        """
        pass

    def test_range_delete(self):
        """Test case for range_delete

        Delete the Range object.  # noqa: E501
        """
        pass

    def test_range_list(self):
        """Test case for range_list

        List Range objects.  # noqa: E501
        """
        pass

    def test_range_list_next_available_ip(self):
        """Test case for range_list_next_available_ip

        List Next Available IP objects.  # noqa: E501
        """
        pass

    def test_range_read(self):
        """Test case for range_read

        Read the Range object.  # noqa: E501
        """
        pass

    def test_range_update(self):
        """Test case for range_update

        Update the Range object.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
