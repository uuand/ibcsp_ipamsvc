# coding: utf-8

"""
    IP Address Management API

    The IPAM/DHCP Application is a BloxOne DDI service providing IP address management and DHCP protocol features. The IPAM component provides visibility into and provisioning tools to manage networking spaces, monitoring and reporting of entire IP address infrastructures, and integration with DNS and DHCP protocols. The DHCP component provides DHCP protocol configuration service with on-prem host serving DHCP protocol. It is part of the full-featured, DDI cloud solution that enables customers to deploy large numbers of protocol servers to deliver DNS and DHCP throughout their enterprise network.     # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class IpamsvcServerInheritance(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ddns_block': 'IpamsvcInheritedDDNSBlock',
        'ddns_client_update': 'InheritanceInheritedString',
        'ddns_generate_name': 'InheritanceInheritedBool',
        'dhcp_config': 'IpamsvcInheritedDHCPConfig',
        'dhcp_options': 'IpamsvcInheritedDHCPOptionList',
        'hostname_rewrite_block': 'IpamsvcInheritedHostnameRewriteBlock'
    }

    attribute_map = {
        'ddns_block': 'ddns_block',
        'ddns_client_update': 'ddns_client_update',
        'ddns_generate_name': 'ddns_generate_name',
        'dhcp_config': 'dhcp_config',
        'dhcp_options': 'dhcp_options',
        'hostname_rewrite_block': 'hostname_rewrite_block'
    }

    def __init__(self, ddns_block=None, ddns_client_update=None, ddns_generate_name=None, dhcp_config=None, dhcp_options=None, hostname_rewrite_block=None):  # noqa: E501
        """IpamsvcServerInheritance - a model defined in Swagger"""  # noqa: E501

        self._ddns_block = None
        self._ddns_client_update = None
        self._ddns_generate_name = None
        self._dhcp_config = None
        self._dhcp_options = None
        self._hostname_rewrite_block = None
        self.discriminator = None

        if ddns_block is not None:
            self.ddns_block = ddns_block
        if ddns_client_update is not None:
            self.ddns_client_update = ddns_client_update
        if ddns_generate_name is not None:
            self.ddns_generate_name = ddns_generate_name
        if dhcp_config is not None:
            self.dhcp_config = dhcp_config
        if dhcp_options is not None:
            self.dhcp_options = dhcp_options
        if hostname_rewrite_block is not None:
            self.hostname_rewrite_block = hostname_rewrite_block

    @property
    def ddns_block(self):
        """Gets the ddns_block of this IpamsvcServerInheritance.  # noqa: E501

        Optional. Field config for ddns_enabled, ddns_domain, ddns_zones fields from [Server] object.  # noqa: E501

        :return: The ddns_block of this IpamsvcServerInheritance.  # noqa: E501
        :rtype: IpamsvcInheritedDDNSBlock
        """
        return self._ddns_block

    @ddns_block.setter
    def ddns_block(self, ddns_block):
        """Sets the ddns_block of this IpamsvcServerInheritance.

        Optional. Field config for ddns_enabled, ddns_domain, ddns_zones fields from [Server] object.  # noqa: E501

        :param ddns_block: The ddns_block of this IpamsvcServerInheritance.  # noqa: E501
        :type: IpamsvcInheritedDDNSBlock
        """

        self._ddns_block = ddns_block

    @property
    def ddns_client_update(self):
        """Gets the ddns_client_update of this IpamsvcServerInheritance.  # noqa: E501

        Optional. Field config for ddns_client_update field from [Server] object.  # noqa: E501

        :return: The ddns_client_update of this IpamsvcServerInheritance.  # noqa: E501
        :rtype: InheritanceInheritedString
        """
        return self._ddns_client_update

    @ddns_client_update.setter
    def ddns_client_update(self, ddns_client_update):
        """Sets the ddns_client_update of this IpamsvcServerInheritance.

        Optional. Field config for ddns_client_update field from [Server] object.  # noqa: E501

        :param ddns_client_update: The ddns_client_update of this IpamsvcServerInheritance.  # noqa: E501
        :type: InheritanceInheritedString
        """

        self._ddns_client_update = ddns_client_update

    @property
    def ddns_generate_name(self):
        """Gets the ddns_generate_name of this IpamsvcServerInheritance.  # noqa: E501

        Optional. Field config for ddns_generate_name field from [Server] object.  # noqa: E501

        :return: The ddns_generate_name of this IpamsvcServerInheritance.  # noqa: E501
        :rtype: InheritanceInheritedBool
        """
        return self._ddns_generate_name

    @ddns_generate_name.setter
    def ddns_generate_name(self, ddns_generate_name):
        """Sets the ddns_generate_name of this IpamsvcServerInheritance.

        Optional. Field config for ddns_generate_name field from [Server] object.  # noqa: E501

        :param ddns_generate_name: The ddns_generate_name of this IpamsvcServerInheritance.  # noqa: E501
        :type: InheritanceInheritedBool
        """

        self._ddns_generate_name = ddns_generate_name

    @property
    def dhcp_config(self):
        """Gets the dhcp_config of this IpamsvcServerInheritance.  # noqa: E501

        Optional. Field config for dhcp_config field from [Server] object.  # noqa: E501

        :return: The dhcp_config of this IpamsvcServerInheritance.  # noqa: E501
        :rtype: IpamsvcInheritedDHCPConfig
        """
        return self._dhcp_config

    @dhcp_config.setter
    def dhcp_config(self, dhcp_config):
        """Sets the dhcp_config of this IpamsvcServerInheritance.

        Optional. Field config for dhcp_config field from [Server] object.  # noqa: E501

        :param dhcp_config: The dhcp_config of this IpamsvcServerInheritance.  # noqa: E501
        :type: IpamsvcInheritedDHCPConfig
        """

        self._dhcp_config = dhcp_config

    @property
    def dhcp_options(self):
        """Gets the dhcp_options of this IpamsvcServerInheritance.  # noqa: E501

        Optional. Field config for dhcp_options field from [Server] object.  # noqa: E501

        :return: The dhcp_options of this IpamsvcServerInheritance.  # noqa: E501
        :rtype: IpamsvcInheritedDHCPOptionList
        """
        return self._dhcp_options

    @dhcp_options.setter
    def dhcp_options(self, dhcp_options):
        """Sets the dhcp_options of this IpamsvcServerInheritance.

        Optional. Field config for dhcp_options field from [Server] object.  # noqa: E501

        :param dhcp_options: The dhcp_options of this IpamsvcServerInheritance.  # noqa: E501
        :type: IpamsvcInheritedDHCPOptionList
        """

        self._dhcp_options = dhcp_options

    @property
    def hostname_rewrite_block(self):
        """Gets the hostname_rewrite_block of this IpamsvcServerInheritance.  # noqa: E501

        Optional. Field config for hostname_rewrite_enabled, hostname_rewrite_regex, hostname_rewrite_char fields from [Server] object.  # noqa: E501

        :return: The hostname_rewrite_block of this IpamsvcServerInheritance.  # noqa: E501
        :rtype: IpamsvcInheritedHostnameRewriteBlock
        """
        return self._hostname_rewrite_block

    @hostname_rewrite_block.setter
    def hostname_rewrite_block(self, hostname_rewrite_block):
        """Sets the hostname_rewrite_block of this IpamsvcServerInheritance.

        Optional. Field config for hostname_rewrite_enabled, hostname_rewrite_regex, hostname_rewrite_char fields from [Server] object.  # noqa: E501

        :param hostname_rewrite_block: The hostname_rewrite_block of this IpamsvcServerInheritance.  # noqa: E501
        :type: IpamsvcInheritedHostnameRewriteBlock
        """

        self._hostname_rewrite_block = hostname_rewrite_block

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IpamsvcServerInheritance, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IpamsvcServerInheritance):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
